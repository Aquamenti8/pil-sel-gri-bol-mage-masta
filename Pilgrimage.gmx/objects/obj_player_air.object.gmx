<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player_R</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_player_land</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gravit√©, saut et autres

    //GET INPUT
if (obj_input.gamepad=false)key_right = keyboard_check(ord("D"));
else {if(gamepad_axis_value(0,gp_axislh)&gt;0) key_right =1;
    else key_right=0
    }

if (obj_input.gamepad=false)key_left = -keyboard_check(ord("Q"));
else {if(gamepad_axis_value(0,gp_axislh)&lt;0) key_left =-1;
    else key_left=0
    }
    key_down = keyboard_check(ord("S"));
if (obj_input.gamepad=false) key_jump = keyboard_check(ord("Z"));
else {if gamepad_button_check(0,gp_face1)key_jump=1; 
    else key_jump=0
    }

    //GRAVIT2 ET SAUT
if (vsp &lt; 10) vsp += GRAV;  
if (vsp &lt; 0) &amp;&amp; (!key_jump){ 
    vsp = max(vsp,0)
}
   
//Vertical Collision
if (place_meeting(x,y+vsp,obj_plateforme))
{
    while(!place_meeting(x,y+sign(vsp),obj_plateforme)){
        y += sign(vsp);
    }
    vsp = 0;
}
/// Goto land
if(place_meeting(x,y+1,obj_plateforme)){
    instance_change(obj_player_land,false)
}

y += vsp;


/// HORIZONTAL DEPLACEMENTS
move = key_left + key_right;
if(QD_off=false){
hsp = move*(P_SPEED+spd_bonus);
}
else hsp=0

//Mirroring
if (move&lt;0) {
    mirror = FACE_LEFT
    sprite_index = sp_player_L
 }
if (move&gt;0) {
    mirror = FACE_RIGHT
    sprite_index = sp_player_R
}
//Horizontal Collision
if (place_meeting(x+hsp,y,obj_plateforme))
{
    while(!place_meeting(x+sign(hsp),y,obj_plateforme)){
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
draw_self()
draw_text(x,y-70,"AIR")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
