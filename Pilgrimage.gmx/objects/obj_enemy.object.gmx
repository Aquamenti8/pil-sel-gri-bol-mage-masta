<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_enemy</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation vartiables
mode=0
HP = 8
HP_max=8
mirored = false // Si l'objet est retourné ou pas

// définition des champs de vues
// idle = x-400 - sprite_width/2, y-200 - sprite_height/2, x+100 - sprite_width/2, y+100 - sprite_height/2
// aware = x-600 - sprite_width/2, y-350 - sprite_height/2, x+180 - sprite_width/2, y+180 - sprite_height/2


hsp = 0;    // Vitesse horizontale
vsp = 0;    // Vitesse verticale
movespeed=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death

if(HP&lt;=0)  instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// IA condition &amp; priority

//mode0: IDLE, si joueur non détecté
//mode1: Aware, pathfinder(joueur), si joueur détecté
//mode2: Aggressive, si joueur à portée

// teste les condition et choisit le mode en fonction d'une liste de priorités


// Retourne l'entité suivant si elle est à gauche ou à droite du joueur
if (mirored = true){
idlx1 = x-400 - sprite_width/2 
idlx2 = x+100 - sprite_width/2}
else {
idlx1 = x+400 - sprite_width/2 
idlx2 = x-100 - sprite_width/2}

// Choix du mode 0,1,2
mode =0
if (collision_ellipse( idlx1, y-200 - sprite_height/2, idlx2, y+100 - sprite_height/2, obj_player, true, true ))
    {mode = 1}
if (mode=1 &amp;&amp; (place_meeting(x+10,y,obj_player) || place_meeting(x-10,y,obj_player)))
    {mode = 2}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// IA modes

//mode0: fait une ronde de 200px, condition: default
//mode1: va vers le joueur, condition: joueur a moins de 300px de enemy
//mode2: attaque le joueur, condition: joueur a moins de 10px de enemy

//Reagit au mode qui a eté choisit

if(mode=1)  
{  
    if (x - obj_player.x &gt;= 0) { mirored = true; } // Regarde si le joueur est à gauche ou à droite de l'entité
    else { mirored = false; } // Si il est à droite, le sprite de l'entité se retournera et vis versa 
    
    if (mirored == true) { image_xscale = -1; }
    if (mirored == false) { image_xscale = 1; }

scr_pathfinder(obj_player.x , id);
}

if(mode=0){hsp=0}

if(mode=2){hsp=1}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collisions et gravité
if (!obj_input.pause){

    if (vsp &lt; 10) vsp += GRAV;
    //Horizontal Collision
    if (place_meeting(x+hsp,y,obj_plateforme))
    {
        while(!place_meeting(x+sign(hsp),y,obj_plateforme)){
            x += sign(hsp);
        }
        hsp = 0;
    }
    x += hsp;  
    //Vertical Collision
    if (place_meeting(x,y+vsp,obj_plateforme))
    {
        while(!place_meeting(x,y+sign(vsp),obj_plateforme)){
            y += sign(vsp);
        }
        vsp = 0;
    }
    y += vsp;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw hp bar

draw_self()
if(HP!=HP_max){
    draw_rectangle(x-16,y-35,x-16+40,y-35-10,true)
    draw_rectangle(x-16,y-35,x-16+HP/HP_max*40,y-35-10,false)
    draw_text(x-16,y-70,HP)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw sightfield

if (mirored = true){
    draw_ellipse( x-400 - sprite_width/2, y-200 - sprite_height/2, x+100 - sprite_width/2, y+100 - sprite_height/2, 3 )}
if (mirored = false){
    draw_ellipse( x+400 - sprite_width/2, y-200 - sprite_height/2, x-100 - sprite_width/2, y+100 - sprite_height/2, 3 )}
    
// Draw IA mode    
draw_text(x-5, y-50, mode)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
